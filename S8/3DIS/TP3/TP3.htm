<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>

<meta content="text/html; charset=ISO-8859-1" http-equiv="content-type"><title>M1 info 3DIS TP3</title></head><body><h1 style="text-align: center;">M1 info 3DIS TP3</h1>
<div style="text-align: center;">
<h2><span style="font-weight: bold;">Décomposition d'une image en fréquences</span></h2>
<span style="font-weight: bold;"></span></div>

<b>Conseil</b> : Essayez de faire vos algorithmes pour que cela puisse fonctionner sur n'importe quelle taille d'image.

<h2><b>I. Image et domaine spectral</b></h2>
<code>
% Lecture et affichage de l'image
<br />
img = imread('lena.jpg');
<br />
image(img);
<br />
title('Image Lena origine');
<br />
colormap(gray(256));

</code>
<ul>
<li>Calculer la représentation fréquentielle de l'image ci-dessous, en utilisant la Transformée bidimensionnelle Discrète de Fourier : <b><tt>fft2</tt></b> sous Matlab.</li></ul>

<img alt="Image de Lena" src="lena.jpg">

<br />
<b>Attention</b> : le résultat est une matrice complexe de même dimension que la matrice de départ !<br>
Pour visualiser cette matrice de coefficients complexes, il vous faut calculer le module, puis afficher le résultat suivant une échelle logarithmique des intensités (après recadrage de la dynamique).</td>
<h2><b>II. Localisation des hautes et des basses fréquences</b></h2>
<b>Attention</b> : la représentation de Matlab n'est pas la représentation conventionnelle !<br><br>

<b>Méthode</b> : supprimer des zones fréquentielles de l'image afin de situer les hautes et les basses fréquences.<br><br>

Pour cela, des coefficients complexes de la représentation fréquentielle (coefficients du spectre), situés dans une zone rectangulaire (ou circulaire) seront remplacés par des 0.<br><br>

Dans les 2 exemples ci-dessous, 25% des coefficients ont été supprimés.

<table style="width: 100%; text-align: left;" cellpadding="2" cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;"><img alt="suppression des coefficients au centre" src="tp3_1.jpg">
      </td>
<td style="vertical-align: top;"><img alt="suppression des coefficients sur le bord" src="tp3_2.jpg">
      </td>
   </tr>
  </tbody>
</table>


<ul>
<li>Afin de mesurer l'impact de ce traitement, effectuer la Transformée de Fourier Inverse (cf. <b><tt>ifft2</tt></b> sous Matlab) et afficher l'image.<br><br></li>

<li>Alors ? Où se situent les hautes et les basses fréquences ?<br><br></li>

<li>A partir de quel pourcentage de coefficients complexes supprimés en basses fréquences, l'image n'est plus reconnaissable ?<br><br></li>
<li>Proposer une configuration qui permette de ne garder que les contours de l'image.<br><br></li>
</ul>


<h2><b>III. Réduction du bruit dans une image</b></h2>

<ul>
<li>On va chercher à débruiter l'image ci-dessous (elle a été créée avec la fonction  <b><tt>imnoise</tt></b> de la boite à outil Image Processing, celà correspond à un bruit de type "poivre-et-sel" correspondant à 5% des pixels).</li>
</ul>

<img alt="Lena avec bruit poivre et sel" src="img_b.jpg">

<ul>
<li>Réduire ce bruit en utilisant le spectre de Fourier.</li>
</ul>

<ul>
<li>Comparez ce filtrage avec l'application sur l'image bruitée d'un filtre médian 3x3. Pour simplifier l'algorithme, on pourra utiliser les commandes <b><tt>reshape</tt></b> et <b><tt>sort</tt></b></li>
</ul>

</body>
</html>